<Window x:Class="FileTracker.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:FileTracker.Views"
        xmlns:vm="clr-namespace:FileTracker.ViewModels"
        xmlns:conv="clr-namespace:FileTracker.Converters"
        Title="FileTracker"
        Icon="../Resources/MainIcon.ico"
        Height="350" Width="780">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <conv:ByteSizeConverter x:Key="ByteSizeConverter"/>
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
    </Window.Resources>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <l:InteractionMessageTrigger MessageKey="InformationMessage" Messenger="{Binding Messenger}">
            <l:InformationDialogInteractionMessageAction/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>

        <Grid Margin="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Text="対象フォルダ"/>
            <ListBox Grid.Row="1" Name="FolderList" ItemsSource="{Binding TrackingFolders}" IsSynchronizedWithCurrentItem="False">
                <ListBox.Resources>
                    <ContextMenu x:Key="cm">
                        <MenuItem Header="削除" FontWeight="Bold"
                                  Command="{Binding DataContext.RemoveFolderCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                  CommandParameter="{Binding}"/>
                    </ContextMenu>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="ContextMenu" Value="{StaticResource cm}"/>
                    </Style>
                </ListBox.Resources>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox Margin="2" IsChecked="{Binding IsWatching}" Focusable="False" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding Path}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Grid Grid.Row="2" Margin="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Margin="1" Name="PathText" Text="" />
                <Button Grid.Column="1" Margin="1" Content="追加"
                        Command="{Binding AddFolderCommand}"
                        CommandParameter="{Binding Text, ElementName=PathText}"/>
            </Grid>
        </Grid>
        <GridSplitter Grid.Column="1" Width="4" HorizontalAlignment="Center"/>
        <Grid Grid.Column="2" Margin="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Text="追跡ファイル"/>
            <ListView Name="FileList" Grid.Row="1" ItemsSource="{Binding SelectedItem.TrackingFiles, ElementName=FolderList}" SelectionMode="Single">
                <ListView.Resources>
                    <Style TargetType="ListViewItem">
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu>
                                    <MenuItem Header="スナップする" FontWeight="Bold" Command="{Binding SnapCommand}"/>
                                    <MenuItem Header="スナップファイルをクリア" Command="{Binding ClearCommand}"/>
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ListView.Resources>
                <ListView.View>
                    <GridView AllowsColumnReorder="True">
                        <GridViewColumn Header="ファイル名" DisplayMemberBinding="{Binding Name}" Width="180"/>
                        <GridViewColumn Header="最終書き込み" DisplayMemberBinding="{Binding LastWriteTime, StringFormat={}yyyy/MM/dd HH:mm:ss}" Width="144"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
        <GridSplitter Grid.Column="3" Width="4" HorizontalAlignment="Center"/>
        <Grid Grid.Column="4" Margin="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Text="スナップファイル"/>
            <ListView Name="SnappedList" Grid.Row="1" DataContext="{Binding SelectedItem, ElementName=FileList}" ItemsSource="{Binding SnappedFiles}" SelectionMode="Single">
                <ListView.Resources>
                    <ContextMenu x:Key="cm">
                        <MenuItem Header="復元" FontWeight="Bold"
                                  Command="{Binding DataContext.RestoreCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                  CommandParameter="{Binding Key}"/>
                        <MenuItem Header="削除"
                                  Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                  CommandParameter="{Binding Key}"/>
                    </ContextMenu>
                    <!-- 右寄せにしたい…右寄せにしたくない？ -->
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="ContextMenu" Value="{StaticResource cm}"/>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView AllowsColumnReorder="True">
                        <GridViewColumn Header="スナップ日時" DisplayMemberBinding="{Binding Key, StringFormat={}yyyy/MM/dd HH:mm:ss}" Width="144"/>
                        <GridViewColumn Header="サイズ" Width="80">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <!-- 右に寄せていこうな -->
                                    <TextBlock Text="{Binding Value.Length, Converter={StaticResource ByteSizeConverter}}" HorizontalAlignment="Right"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
    </Grid>
</Window>
